name: CI/CD Pipeline

on:
  push:
    branches: [main, develop, "feature/*", "issue*"]
  pull_request:
    branches: [main, develop]

jobs:
  # コード品質チェック
  lint-and-format:
    name: Lint & Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier check
        run: npx prettier --check "**/*.{js,jsx,ts,tsx,json,md}"

      - name: Run TypeScript type check
        run: npm run type-check

  # ビルドテスト
  build:
    name: Build Test
    runs-on: ubuntu-latest
    needs: lint-and-format

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build

      - name: Check build output
        run: |
          if [ -d ".next" ]; then
            echo "✅ Build successful - .next directory exists"
            ls -la .next/
          else
            echo "❌ Build failed - .next directory not found"
            exit 1
          fi

  # セキュリティチェック
  security:
    name: Security Check
    runs-on: ubuntu-latest
    needs: lint-and-format

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for known vulnerabilities
        run: npx audit-ci --config audit-ci.json || true

  # パフォーマンステスト
  performance:
    name: Performance Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build

      - name: Start application
        run: npm start &

      - name: Wait for application to start
        run: sleep 10

      - name: Check application health
        run: |
          if curl -f http://localhost:3000 > /dev/null 2>&1; then
            echo "✅ Application is running successfully"
          else
            echo "❌ Application failed to start"
            exit 1
          fi

  # プルリクエスト時の追加チェック
  pr-checks:
    name: Pull Request Checks
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Check for lint-staged issues
        run: npm run lint-staged --dry-run

      - name: Validate commit messages
        run: |
          # コミットメッセージの形式チェック
          git log --oneline --format="%s" origin/main..HEAD | while read commit_msg; do
            if [[ ! $commit_msg =~ ^(feat|fix|docs|style|refactor|test|chore|ci|build|perf|revert)(\(.+\))?: .+ ]]; then
              echo "❌ Invalid commit message format: $commit_msg"
              echo "Expected format: type(scope): description"
              exit 1
            fi
          done
          echo "✅ All commit messages follow conventional commits format"
